# The Source Code Management (SCM) provider to use. Currently, only "github" and "gitlab" are supported
SCM_PROVIDER=github

# The PostgreSQL database into which the PRs are written, format: "<username>:<password>@<host>[:<port>]/<database-name>"
# The following string uses the PostgreSQL database provided in the docker-compose.yaml file
DATABASE_WITH_CREDS=metabase:password@postgres/metabase

# The base URL of the SCM's API to use (optional, if omitted, the default is "https://api.github.com" if SCM_PROVIDER=github)
API_BASE_URL=

# The personal access token to use for the API of the SCM. In case of GitHub, it needs to have the "repo" scope
PAT=your-PAT

# Comma-separated list of repositories to fetch Renovate PRs from.
# Format: "<owner>/<repo>,<owner>/<repo>,<owner>/<repo>,...", but just <owner> is also allowed, in which case all
# repositories of the specified owner are fetched. Note: if <owner> is a user (rather than an organization), then
# please use the form "user:<username>" so that this tool can use the correct API endpoint
REPOS=some-org,some-other-org/some-repo

# A label that you configured in your renovate.json file to be assigned to any PR created by Renovate (optional)
RENOVATE_PR_LABEL=dependencies

# The label that Renovate uses to mark security PRs
RENOVATE_PR_SECURITY_LABEL=security

# The SCM username that Renovate uses to create PRs (optional, if omitted, Renovate PRs may have been created by ANY user)
# Note that you must set at least one of RENOVATE_PR_LABEL or RENOVATE_USER so that the script can identify Renovate PRs
# If you set both, the script considers only those PRs that have BOTH the specified label AND are created by the specified user
RENOVATE_USER=

# A regular expression that identifies the title of Renovate's Onboarding PR (optional, by default a regex is used
# that accepts PR titles that start with "Configure Renovate")
RENOVATE_ONBOARDING_PR_REGEX=

# If set to true, those dependencies that the script detects in Renovate PRs that are of type "major" and have an
# increment of MULTIPLE major versions (e.g. v4.1 -> v6.0), will be marked as "multiple-major" (instead of "major")
# in the database
RENOVATE_DETECT_MULTIPLE_MAJOR=true

# How many weeks in the past (measured from <now>) should the script sample the onboarding status of the Git repositories?
RENOVATE_ONBOARDING_STATUS_SAMPLING_INTERVAL_MAX_PAST_WEEKS=30

# The sampling interval, specified in weeks
# For instance, if today is Tuesday 2023-12-19, and the sampling interval is 2 weeks, then the script will sample the
# onboarding status of the Git repositories on Monday 2023-12-18, Monday 2023-12-04, etc., until
# the RENOVATE_ONBOARDING_STATUS_SAMPLING_INTERVAL_MAX_PAST_WEEKS limit is reached
RENOVATE_ONBOARDING_STATUS_SAMPLING_INTERVAL_IN_WEEKS=2
